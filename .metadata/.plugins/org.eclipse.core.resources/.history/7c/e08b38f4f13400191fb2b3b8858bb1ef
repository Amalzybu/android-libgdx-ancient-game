package com.dravianart.game.entities;

import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.graphics.g2d.Animation.PlayMode;
import com.badlogic.gdx.utils.Array;

import tools.Chat;
import tools.Crect;

public class DiengTree {
	public float x,y;
	public boolean b=true,ct=false;
	public Crect r;
	public Chat ch=null;
	public Animation[] rolls;
	float stateTime=0,stime1=0,stime2=0;
	boolean flg=true;
	SpriteBatch batch=null;
	Texture npc;
	MovBlock mvb;
	Tree t;
	String[] str={"hey....." ,"how could you"," get here ?","this is my pond idiot","get out from here",".........."};
	public DiengTree(float x,float y,SpriteBatch batch,Texture np,Tree t,MovBlock mvb)
	{
		this.mvb=mvb;
		this.t=t;
		npc=np;
		this.batch=batch;
		ch=new Chat(str,batch,50,500,8,0.4f);
		this.x=x;
		this.y=y;
		r=new Crect(x,y,200,200);
		rolls=new Animation[3];
		TextureRegion[][] rollSpriteSheet = TextureRegion.split(npc, 200, 200);
		rolls[0] = new Animation(0.2f,  new Array<TextureRegion>(rollSpriteSheet[0]),PlayMode.LOOP);
		rolls[1] = new Animation(0.3f, new Array<TextureRegion>(rollSpriteSheet[1]));
		rolls[2] = new Animation(0.3f, new Array<TextureRegion>(rollSpriteSheet[2]));
		//rolls[3] = new Animation(0.5f, new Array<TextureRegion>(rollSpriteSheet[3]),PlayMode.LOOP);

	}
	public boolean render (float delta)
	{
		
		if(x<=200)
		{ 
			
			if(!rolls[1].isAnimationFinished(stime1))
			{
				mvb.pause=1;
				mvb.speed=100;
			stime1+=delta;
			batch.draw((TextureRegion) rolls[1].getKeyFrame(stime1), x, y,200*3, 200*3);
			}
			else
			{
				mvb.speed=180;
				stime2+=delta;
				batch.draw((TextureRegion) rolls[2].getKeyFrame(stime2), x, y,200*3, 200*3);
			}
			if(rolls[2].isAnimationFinished(stime2))
			{
				mvb.pause=0;
			}
			b=false;
		}

		else
		{
		stateTime+=delta;
		batch.draw((TextureRegion) rolls[0].getKeyFrame(stateTime), x, y,200*3, 200*3);
		b=true;
		}
		
		
		return b;
	}
	public void update()
	{
		r.move(x, y);
	}
	public void dispose()
	{
		npc.dispose();
		ch.dispose();
	}

}
